/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.36
 * Generated at: 2021-04-16 08:00:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pro;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class pdetail_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<h2>[상품상세정보]</h2>\r\n");
      out.write("<style>\r\n");
      out.write("\tspan a:hover{color:pink;}\r\n");
      out.write("</style>\r\n");
      out.write("<form name=\"frm\" enctype=\"multipart/form-data\">\r\n");
      out.write("\t<div style=\"overflow:hidden; text-align:center; margin-left:30px;\">\r\n");
      out.write("      <div>\r\n");
      out.write("         <input type=\"file\" name=\"image\" size=100 style=\"display:none; padding-left:20px;\" accept=\"image/*\"/>\r\n");
      out.write("         \t<img src=\"/product/img/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.image}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" width=550 id=\"image\"/>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div>\r\n");
      out.write("      \t<h1 id=\"proInfo\" style=\"text-align:center\" prod_id=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.prod_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" prod_name=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.prod_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write('(');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.prod_id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(')');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.prod_name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1> \r\n");
      out.write("      \t<h2 id=\"proPrice\" style=\"text-align:right; margin-right:80px;\" price=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.price}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.price}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("원</h2>\r\n");
      out.write("      \t<h3 style=\"margin-left:700px;\">색상선택</h3>\r\n");
      out.write("      \t\t<select style=\"margin-left:700px; margin-bottom:15px;\">\r\n");
      out.write("      \t\t\t<option>아이보리</option>\r\n");
      out.write("      \t\t\t<option>블랙</option>\r\n");
      out.write("      \t\t\t<option selected>챠콜</option>\r\n");
      out.write("      \t\t\t<option>소라</option>\r\n");
      out.write("      \t\t\t<option>민트</option>\r\n");
      out.write("      \t\t\t<option>라임</option>\r\n");
      out.write("      \t\t</select>\r\n");
      out.write("      \t\r\n");
      out.write(" \t\t<span class=\"pur\" style=\"text-align:right; cursor:pointer; margin-left:700px; font-size:20px; background:black; color:white; padding:5px;\">장바구니에 담기</span>\r\n");
      out.write(" \t\t<h2 class=\"mapp\" style=\"text-align:right;cursor:pointer; color:#312E41;\">유사상품 오프라인 매장 둘러보기</h2>\r\n");
      out.write("      </div>\r\n");
      out.write("      <h3>제품 상세 설명 </h3>\r\n");
      out.write("      <textarea id=\"proDetail\"rows=\"10\" cols=\"93\" name=\"detail\" detail=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.detail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('"');
      out.write('>');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.detail}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("    </div>  \r\n");
      out.write("</form>\r\n");
      out.write("<script>\r\n");
      out.write("   var url=\"/pro/list.json\";\r\n");
      out.write("   \r\n");
      out.write("   //장바구니에 넣기 버튼을 클릭한 경우\r\n");
      out.write("   $(frm).on(\"click\", \".pur\", function(){\r\n");
      out.write("\t   \t  var prod_id=$(\"#proInfo\").attr(\"prod_id\");\r\n");
      out.write("\t   \t  var prod_name=$(\"#proInfo\").attr(\"prod_name\");\r\n");
      out.write("\t   \t  var price=$(\"#proprice\").attr(\"price\");\r\n");
      out.write("\t\t  if(!confirm(prod_name + \"를 장바구니에 넣습니다\")) return;\r\n");
      out.write("\t\t  $.ajax({\r\n");
      out.write("\t\t\t  type:\"get\",\r\n");
      out.write("\t\t\t  url:\"/cart/insert\",\r\n");
      out.write("\t\t\t  data:{\"prod_id\":prod_id,\"prod_name\":prod_name,\"price\":price},\r\n");
      out.write("\t\t\t  success:function(){\r\n");
      out.write("\t\t\t\tif(!confirm(\"장바구니에서 물건을 확인하시겠습니까?\")) return;\r\n");
      out.write("\t\t\t\tlocation.href=\"/cart/list\";\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t  });\r\n");
      out.write("\t   });\r\n");
      out.write("   \r\n");
      out.write("   //유사상품 오프라인 매장 둘러보기 버튼을 클릭한경우\r\n");
      out.write("   $(frm).on(\"click\",\".mapp\",function(){\r\n");
      out.write("\t   var detail=$(\"#proDetail\").attr(\"detail\");\r\n");
      out.write("\t   alert(detail);\r\n");
      out.write("\t   $.ajax({\r\n");
      out.write("\t\t\t  type:\"get\",\r\n");
      out.write("\t\t\t  url:\"/pro/pdetail\",\r\n");
      out.write("\t\t\t  data:{\"detail\":detail},\r\n");
      out.write("\t\t\t  success:function(){\r\n");
      out.write("\t\t\t\t  alert(\"...\");\r\n");
      out.write("\t\t\t\tlocation.href=\"/pro/simage\";\r\n");
      out.write("\t\t\t  }\r\n");
      out.write("\t\t  });\r\n");
      out.write("   });\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
